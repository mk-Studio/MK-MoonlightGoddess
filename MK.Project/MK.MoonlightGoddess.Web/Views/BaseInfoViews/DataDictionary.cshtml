
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>DataDictionary</title>
    <link href="~/Scripts/layui-v2.3.0-rc1/layui/css/layui.css" rel="stylesheet" />
    <style type="text/css">
        /*table 样式修改 begin*/
        .layui-table-hover {
            background-color: #c2c2c2 !important;
        }
        .layui-table-click {
            background-color: #393D49 !important;
            color: white;
        }
        /*table 样式修改 end*/

        /*tree 样式修改 begin*/
        #treeDataDictionary li a {
            display: block;
            width: 100%;
            height: 25px;
            text-align: left;
            line-height: 25px;
            margin-bottom: 6px;
            border-left: 2px solid #009688;
            border-radius: 12.5px 
        }
        #treeDataDictionary li a :hover {
            color: #009688;
            font-weight: bold;
        }
        .treeDataDictionary-on {
            color: #FFB800;
            font-weight: bold;
        }
        .layui-tree-skin-basegreen .layui-icon {
            color: #009688;
        }
        /*tree 样式修改 end*/
    </style>
</head>
<body>

    @*<fieldset class="layui-elem-field layui-field-title" style="margin-top: 20px;">
        <legend>数据字典</legend>
    </fieldset>*@
    <div>
        @*<select id="testSelect" xm-select="select" xm-select-type="3" xm-select-icon="&#xe605;" xm-select-placeholder="请选择" xm-select-skin="primary" xm-select-search style="width:230px">

        </select>*@

        <div class="layui-row">
            <div class="layui-col-lg2">
                <div id="dataList" style="display: inline-block; width: 85%; height: 715px; padding: 10px; border: 1px solid #ddd; overflow: auto;">
                    <ul id="treeDataDictionary"></ul>
                </div>
            </div>
            <div class="layui-col-lg10">
                <div id="dataContent">
                    <fieldset class="layui-elem-field">
                        <legend>查询</legend>
                        <div class="layui-field-box">
                            <form id="QueryForms" class="layui-form layui-form-pane" action="" lay-filter="queryForm"></form>
                        </div>
                    </fieldset>
                    <div class="layui-btn-group tbTools">
                        <button class="layui-btn layui-btn-sm" data-type="add"><i class="layui-icon layui-icon-add-1"></i>添加</button>
                        <button class="layui-btn layui-btn-sm" data-type="edit"><i class="layui-icon layui-icon-edit"></i>修改</button>
                        <button class="layui-btn layui-btn-sm" data-type="delete"><i class="layui-icon layui-icon-delete"></i>删除</button>
                        <button class="layui-btn layui-btn-sm" data-type="test"><i class="layui-icon">&#xe609;</i>测试</button>
                    </div>
                    <table class="layui-hide" id="tbDataDictionary" lay-filter="tbDataDictionary"></table>
                    <script type="text/html" id="switchShow">
                        <!-- 这里的 checked 的状态只是演示 -->
                        <input type="checkbox" name="Show" value="{{d.ID}}" lay-skin="switch" lay-text="ON|OFF" lay-event="select" lay-filter="ShowMark" {{ d.ShowMark == 'Y' ? 'checked' : '' }}>
                    </script>
                    <script type="text/html" id="tbDataDictionarybar">
                        <a class="layui-btn layui-btn-xs uploadImage" lay-event="uploadimg">上传图片</a>
                        <a class="layui-btn layui-btn-xs layui-btn layui-btn-danger queryImage" lay-event="queryImage">查看图片</a>
                    </script>
                </div>
            </div>
        </div>
    </div>



    <script src="~/Scripts/layui-v2.3.0-rc1/layui/layui.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Js/MKCom.js"></script>
    <script type="text/javascript">
        layui.config({
            base: '../Js/'
        }).extend({
            formSelects: 'formSelects-v3'
        })
        layui.use(['table', 'form', 'tree', 'upload', 'formSelects', 'laydate'], function () {
            var
                table,//数据表对象
                active,//表上面的按钮事件管理对象
                SelectData, //表格选中的行对象
                SelectTreeNode, //选中的树节点对象
                activeName,//执行的sqlName
                form,//form表单
                upload, //上传
                tbCols, //数据表列对象
                formSelects,
                laydate,
                layuiTableWhere = {
                    model: {}
                }

            table = layui.table;
            form = layui.form;
            upload = layui.upload;
            formSelects = layui.formSelects;
            laydate = layui.laydate;


            //var s = formSelects.value('select');			//获取选中的值
            //formSelects.value('select', 'val');		//获取选中的val数组
            //formSelects.value('select', 'name');		//获取选中的name数组
            //formSelects.value('select', [1, 3]);	//动态赋值
            tbCols = {
                TypeWuLiao: [[ //表头
                    { field: 'WuLiaoTypeName', title: '物料类型名称', width: 150, sort: true, event: 'select' }
                    , { field: 'ShowMark', title: '显示标识', width: 87, event: 'select', templet: '#switchShow' }
                    , { field: 'CreateUser', title: '创建人', width: 140, sort: true, event: 'select' }
                    , { field: 'CreateDate', title: '创建时间', width: 190, sort: true, event: 'select' }
                ]],
                InfoWuLiao: [[ //表头
                    { field: 'WuLiaoTypeID', title: '物料类型名称', width: 150, sort: true, event: 'select' }
                    , { field: 'ShangPinName', title: '商品名称', width: 150, sort: true, event: 'select' }
                    , { field: 'GuiGe', title: '规格', width: 120, event: 'select' }
                    , { field: 'HaiGuanNo', title: '海关编号', width: 140, event: 'select' }
                    , { field: 'WuLiaoImagePath', title: '物料图片路径', width: 140, event: 'select' }
                    , { field: 'ShowMark', title: '显示标识', width: 87, event: 'select', templet: '#switchShow' }
                    , { field: 'CreateUser', title: '创建人', width: 140, sort: true, event: 'select' }
                    , { field: 'CreateDate', title: '创建时间', width: 190, sort: true, event: 'select' }
                    , { fixed: 'right', width: 165, align: 'center', toolbar: '#tbDataDictionarybar' }
                ]],
                InfoSupplier: [[ //表头
                    { field: 'SupplierName', title: '供应商名称', width: 150, sort: true, event: 'select' }
                    , { field: 'WuLiaoDetail', title: '供应物料名称', width: 180, sort: true, event: 'select' }
                    , { field: 'LianXiRen', title: '联系人', width: 150, sort: true, event: 'select' }
                    , { field: 'LianXiFangShi', title: '联系方式', width: 120, event: 'select' }
                    , { field: 'Address', title: '地址', width: 140, event: 'select' }
                    , { field: 'ShowMark', title: '显示标识', width: 87, event: 'select', templet: '#switchShow' }
                    , { field: 'CreateUser', title: '创建人', width: 140, sort: true, event: 'select' }
                    , { field: 'CreateDate', title: '创建时间', width: 190, sort: true, event: 'select' }
                ]],
                TypeWuLiuYeWu: [[
                    { field: 'YeWuType', title: '业务类型名称', width: 150, sort: true, event: 'select' }
                    , { field: 'ShowMark', title: '显示标识', width: 87, event: 'select', templet: '#switchShow'  }
                    , { field: 'CreateUser', title: '创建人', width: 140, sort: true, event: 'select' }
                    , { field: 'CreateDate', title: '创建时间', width: 190, sort: true, event: 'select' }
                ]],
                InfoWuLiuCompany: [[
                    { field: 'YeWuName', title: '业务类型', width: 150, sort: true, event: 'select' }
                    , { field: 'Name', title: '公司名称', width: 180, sort: true, event: 'select' }
                    , { field: 'LianXiRen', title: '联系人', width: 150, sort: true, event: 'select' }
                    , { field: 'LianXiFangShi', title: '联系方式', width: 120, event: 'select' }
                    , { field: 'Address', title: '地址', width: 140, event: 'select' }
                    , { field: 'ShowMark', title: '显示标识', width: 87, event: 'select', templet: '#switchShow'  }
                    , { field: 'CreateUser', title: '创建人', width: 140, sort: true, event: 'select' }
                    , { field: 'CreateDate', title: '创建时间', width: 190, sort: true, event: 'select' }
                ]],
                InfoCurrency: [[
                    { field: 'CurrencyName', title: '币别名称', width: 150, sort: true, event: 'select' }
                    , { field: 'CurrencyCode', title: '币别代码', width: 120, sort: true, event: 'select' }
                    , { field: 'Remark', title: '说明', width: 170, sort: true, event: 'select' }
                    , { field: 'ShowMark', title: '显示标识', width: 87, event: 'select', templet: '#switchShow' }
                    , { field: 'CreateUser', title: '创建人', width: 140, sort: true, event: 'select' }
                    , { field: 'CreateDate', title: '创建时间', width: 190, sort: true, event: 'select' }
                ]]
            }

            //InitNewCombobox("#testSelect", "WuLiaoType", form, false); //绑定下拉框
           
            layui.tree({
                elem: '#treeDataDictionary',  //指定元素
                skin:"basegreen",
                click: function (item) { //点击节点回调
                    item.queryForm();
                    getTabelByUrl(item.tbUrl, item.tbCols);
                    SelectTreeNode = item;
                    SelectData = undefined;
                    layuiTableWhere.model = {};
                },
                width: 500,
                nodes: [
                    //节点数据
                    {
                        name: '物料类型',
                        tbUrl: '/DataDictionary/GetQueryTypeWuLiao',
                        tbCols: tbCols.TypeWuLiao,
                        formUrl: '/FormDataDictionary/FormTypeWuLiao',
                        postUrl: '/DataDictionary/ExceTypeWuLiao',
                        showActionName: "UpdateTypeWuLiaoShowMark",
                        queryForm: function () {
                            getQueryFormElem("/FormDataDictionary/QueryFormTypeWuLiao");
                            form.render('select');
                        },
                        formVal: function (isVal) {
                            //赋值修改的数据
                            if (isVal) {
                                form.val('formTypeWuLiao', {
                                    "WuLiaoTypeName": SelectData.WuLiaoTypeName
                                })
                            }
                        }
                    },
                    {
                        name: '物料信息',
                        tbUrl: '/DataDictionary/GetQueryInfoWuLiao',
                        tbCols: tbCols.InfoWuLiao,
                        formUrl: '/FormDataDictionary/FormInfoWuLiao',
                        postUrl: '/DataDictionary/ExceInfoWuLiao',
                        showActionName: "UpdateInfoWuLiaoShowMark",
                        queryForm: function () {
                            getQueryFormElem("/FormDataDictionary/QueryFormInfoWuLiao");
                            InitNewCombobox("#WuLiaoTypeID", "WuLiaoType", form, true); //绑定下拉框
                            form.render('select');
                        },
                        formVal: function (isVal) {
                            InitNewCombobox("#WuLiaoTypeID-F", "WuLiaoType", form, false); //绑定下拉框
                            //赋值修改的数据
                            if (isVal) {
                                form.val('formInfoWuLiao', {
                                    "WuLiaoTypeID": getWuLiaoTypeID()
                                    , "ShangPinName": SelectData.ShangPinName
                                    , "GuiGe": SelectData.GuiGe
                                    , "HaiGuanNo": SelectData.HaiGuanNo
                                })
                            }
                        }
                    },
                    {
                        name: '供应商信息',
                        tbUrl: '/DataDictionary/GetQueryInfoSupplier',
                        tbCols: tbCols.InfoSupplier,
                        formUrl: '/FormDataDictionary/FormInfoSupplier',
                        postUrl: '/DataDictionary/ExceInfoSupplier',
                        showActionName: "UpdateInfoSupplierShowMark",
                        queryForm: function () {
                            getQueryFormElem("/FormDataDictionary/QueryFormInfoSupplier");
                            InitNewCombobox("#WuLiaoDetail", "WuLiaoType", form, false); //绑定下拉框
                            form.render('select');
                            formSelects.render({
                                name: 'selectSpType'
                            });
                        },
                        formVal: function (isVal) {
                            InitNewCombobox("#detailModel", "WuLiaoType", form, false); //绑定下拉框
                            //赋值修改的数据
                            if (isVal) {
                                form.val('formInfoSupplier', {
                                    "SupplierName": SelectData.SupplierName
                                    , "LianXiRen": SelectData.LianXiRen
                                    , "LianXiFangShi": SelectData.LianXiFangShi
                                    , "Address": SelectData.Address
                                })
                                formSelects.render({
                                    name: 'select'
                                });
                                formSelects.value('select', getShangPinBySupplier())
                            }
                        }
                    },
                    {
                        name: '物流公司业务',
                        tbUrl: '/DataDictionary/GetQueryTypeWuLiuYeWu',
                        tbCols: tbCols.TypeWuLiuYeWu,
                        formUrl: '/FormDataDictionary/FormTypeWuLiuYeWu',
                        postUrl: '/DataDictionary/ExceTypeWuLiuYeWu',
                        showActionName: "UpdateTypeWuLiuYeWuShowMark",
                        queryForm: function () {
                            getQueryFormElem("/FormDataDictionary/QueryFormTypeWuLiuYeWu");
                            form.render('select');
                        },
                        formVal: function (isVal) {
                            //赋值修改的数据
                            if (isVal) {
                                form.val('formTypeWuLiuYeWu', {
                                    "YeWuType": SelectData.YeWuType
                                })
                            }
                        }
                    },
                    {
                        name: '物流公司',
                        tbUrl: '/DataDictionary/GetQueryInfoWuLiuCompany',
                        tbCols: tbCols.InfoWuLiuCompany,
                        formUrl: '/FormDataDictionary/FormInfoWuLiuCompany',
                        postUrl: '/DataDictionary/ExceInfoWuLiuCompany',
                        showActionName: "UpdateInfoWuLiuCompanyShowMark",
                        queryForm: function () {
                            getQueryFormElem("/FormDataDictionary/QueryFormInfoWuLiuCompany");
                            InitNewCombobox("#YeWuID", "YeWuType", form, true); //绑定下拉框
                            form.render('select');
                        },
                        formVal: function (isVal) {
                            InitNewCombobox("#YeWuID-F", "YeWuType", form, false); //绑定下拉框
                            //赋值修改的数据
                            if (isVal) {
                                form.val('formInfoWuLiuCompany', {
                                    "YeWuID": SelectData.YeWuID
                                    , "Name": SelectData.Name
                                    , "LianXiRen": SelectData.LianXiRen
                                    , "LianXiFangShi": SelectData.LianXiFangShi
                                    , "Address": SelectData.Address
                                })
                            }
                        }
                    }, 
                    {
                        name: '币别信息',
                        tbUrl: '/DataDictionary/GetQueryInfoCurrency',
                        tbCols: tbCols.InfoCurrency,
                        formUrl: '/FormDataDictionary/FormInfoCurrency',
                        postUrl: '/DataDictionary/ExceInfoCurrency',
                        showActionName: "UpdateInfoCurrencyShowMark",
                        queryForm: function () {
                            getQueryFormElem("/FormDataDictionary/QueryFormInfoCurrency");
                            form.render('select');
                        },
                        formVal: function (isVal) {
                            //赋值修改的数据
                            if (isVal) {
                                form.val('formInfoCurrency', {
                                    "CurrencyName": SelectData.CurrencyName
                                    , "CurrencyCode": SelectData.CurrencyCode
                                    , "Remark": SelectData.Remark
                                })
                            }
                        }
                    }
                ]
            });

            $('#treeDataDictionary li a').on('click', function () {
                $(this).addClass('treeDataDictionary-on');
                $('#treeDataDictionary li a').not($(this)).removeClass('treeDataDictionary-on');
            });

            function getTabelByUrl(url, cols) {
                //执行一个 table 实例
                table.render({
                    elem: '#tbDataDictionary'
                    , height: 520 - 40
                    , url: url
                    , method: 'post'
                    , where: layuiTableWhere
                    , page: true //开启分页
                    , text: { none: '暂无相关数据' }
                    , cols: cols
                    , done: function (res, curr, count) {
                        upload.render({
                            elem: '.uploadImage', 
                            url: '/api/Upload/Upload', 
                            done: function (res) {
                                //上传完毕回调
                                var model = { ID: SelectData.ID, WuLiaoImagePath: res.data.src }
                                saveUploadPath(model)
                           },
                           error: function (index) {
                               //请求异常回调
                               console.info(index)
                               layer.msg('文件上传异常！请稍后再试', { icon: 5 });
                            }
                        });
                    }
                });
            }

            //监听选择事件
            table.on('tool(tbDataDictionary)', function (obj) {
                var data = obj.data, layEvent = obj.event;
                if (obj.event === 'select') {
                    //提示：只要sql查出来的数据里面有ID，列无需显示也可以获取
                    SelectData = data;
                    //layer.msg('ID<br/><span style="color:red;">' + data.ID + '</span><br/><span style="color:yellow;">' + JSON.stringify(data) + '</span>');
                }
                if (layEvent === 'uploadimg') {
                    SelectData = data;
                } 
                if (layEvent === 'queryImage') {
                    SelectData = data;
                    layer.photos({
                        photos: getLayuiPhotosJson(SelectData.WuLiaoImagePath)
                        , anim: 4 //0-6的选择，指定弹出图片动画类型，默认随机（请注意，3.0之前的版本用shift参数）
                    });
                } 
            });

            //根据物料信息获取物料类型的ID
            function getWuLiaoTypeID() {
                var result = "";
                $.ajax({
                    url: "/DataDictionary/GetWuLiaoTypeID",
                    type: "get",
                    data: { id: SelectData.ID },
                    dataType: "html",
                    async: false,
                    success: function (r) {
                        result = r
                    }
                })
                return result;
            }

            //根据供应商获取所有供应的商品
            function getShangPinBySupplier() {
                var result = "";
                $.ajax({
                    url: "/DataDictionary/GetShangPinBySupplier",
                    type: "get",
                    data: { id: SelectData.ID },
                    dataType: "json",
                    async: false,
                    success: function (r) {
                        result = r
                    }
                })
                return result;
            }

            //保存上传路径
            function saveUploadPath(data)
            {
                $.ajax({
                    url: "/DataDictionary/SaveWuLiaoImagePath",
                    data: data,
                    type: "post",
                    dataType: "json",
                    success: function (r) {
                        if (!r.IsError) {
                            layer.msg('上传成功', { icon: 1 });
                            getTabelByUrl(SelectTreeNode.tbUrl, SelectTreeNode.tbCols);
                        } else {
                            layer.msg('上传失败！请稍后再试', { icon: 5 });
                        }
                    }
                });
            }

            //更新显示标记
            function updateShowMark(url,data) {
                $.ajax({
                    url: url,
                    data: data,
                    type: "post",
                    dataType: "json",
                    success: function (r) {
                        if (!r.IsError) {
                            layer.msg('更新成功', { icon: 1 });
                            getTabelByUrl(SelectTreeNode.tbUrl, SelectTreeNode.tbCols);
                        } else {
                            layer.msg('更新失败！请稍后再试', { icon: 5 });
                            getTabelByUrl(SelectTreeNode.tbUrl, SelectTreeNode.tbCols);
                        }
                    }
                });
            }

            //获取指定的查询模块
            function getQueryFormElem(url) {
                $.ajax({
                    url: url,
                    type: "get",
                    dataType: "html",
                    async: false,
                    success: function (html) {
                        $("#QueryForms").empty();
                        $("#QueryForms").append(html);
                        //常规用法
                        laydate.render({
                            elem: '.queryDate'
                        });
                        laydate.render({
                            elem: '.queryDate2'
                        });
                    }
                })
            }

            function getLayuiPhotosJson(path) {
                var json;
                $.ajax({
                    url: "/DataDictionary/GetImageResult",
                    type: "get",
                    data: { imgVirtualPath: path},
                    dataType:"json",
                    async: false,
                    success: function (result) {
                        json = result;
                    },
                    error: function () {
                        layer.msg('网络请求异常！请稍后再查看。', { icon: 5 });
                    }
                });
                return json;
            }

            active = {
                //添加
                add: function () { //添加
                    activeName = "Insert";
                    var index = layer.load(0, { shade: false });
                    if (SelectTreeNode) {
                        $.post(SelectTreeNode.formUrl, {}, function (str) {
                            layer.open({
                                title:"添加信息",
                                area: ['731px', '386px'],
                                type: 1,
                                content: str, //注意，如果str是object，那么需要字符拼接。
                                cancel: function () {
                                    //右上角关闭回调
                                    //layer.msg("关闭啦~");
                                    //return false 开启该代码可禁止点击该按钮关闭
                                }
                            });
                            layer.close(index);
                            //如果是动态生成的HTML，自动渲染就会失效，需要执行 form.render() 方法来手动渲染
                            form.render();
                            SelectTreeNode.formVal(false); //绑定下拉框
                        });
                    }
                    else {
                        layer.msg("请选择左边要添加的基础信息");
                    }
                },
                //修改
                edit: function () {
                    activeName = "Update";
                    var index = layer.load(0, { shade: false });
                    if (SelectData) {
                        $.post(SelectTreeNode.formUrl, {}, function (str) {
                            layer.open({
                                title: "修改信息",
                                area: ['731px', '386px'],
                                type: 1,
                                content: str,
                                cancel: function () {
                                    //右上角关闭回调
                                    //return false 开启该代码可禁止点击该按钮关闭
                                }
                            });
                            layer.close(index);
                            //如果是动态生成的HTML，自动渲染就会失效，需要执行 form.render() 方法来手动渲染
                            form.render();
                            SelectTreeNode.formVal(true);
                        });
                    } else {
                        layer.msg("请选择要修改的数据");
                    }
                },
                //删除
                delete: function () {
                    activeName = "Delete";
                    if (SelectData) {
                        layer.confirm('确定是否要彻底删除该信息？', {
                            title: "删除信息",
                            btn: ['确定', '算了']
                        }, function (index, layero) {
                            var index = layer.load(0, { shade: false });
                            $.post(SelectTreeNode.postUrl,
                                { model: { ID: SelectData.ID }, name: activeName },
                                function (r) {
                                    if (!r.IsError) {
                                        layer.close(index);
                                        layer.msg("删除成功", { icon: 1 });
                                        getTabelByUrl(SelectTreeNode.tbUrl, SelectTreeNode.tbCols);
                                    } else {
                                        layer.msg('删除异常！', { icon: 5 });
                                    }
                                }
                            );
                        }, function (index) {
                            //算了
                        });

                    } else {
                        layer.msg("请选择要删除的数据");
                    }
                },
                //测试
                test: function () {
                    layer.photos({
                        photos: getLayuiPhotosJson(SelectData.WuLiaoImagePath)
                        , anim: 5 //0-6的选择，指定弹出图片动画类型，默认随机（请注意，3.0之前的版本用shift参数）
                    });
                }
            };

            //监听按钮点击事件
            $('.tbTools .layui-btn').on('click', function () {
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });

            //监听显示标记操作
            form.on('switch(ShowMark)', function (obj) {
                var url = "/DataDictionary/UpdateShowMark",
                    data = { ID: this.value, ShowMark: (obj.elem.checked ? "Y" : "N") , name: SelectTreeNode.showActionName }
                updateShowMark(url, data);
            });

            //监听提交事件
            form.on('submit(comSave)', function (data) {
                var index = layer.load(0, { shade: false });
                var model = activeName == "Insert" ? data.field : $.extend(data.field, { ID: SelectData.ID })
                //layer.alert(JSON.stringify(model));
                $.post(
                    SelectTreeNode.postUrl,
                    { model: model, name: activeName },
                    function (r) {
                        if (!r.IsError) {
                            layer.closeAll();
                            layer.msg("保存成功", { icon: 1 });
                            getTabelByUrl(SelectTreeNode.tbUrl, SelectTreeNode.tbCols);
                        } else {
                            layer.closeAll();
                            layer.msg('保存异常！', { icon: 5 });
                        }
                    }
                );
                return false;
            });

            //[供应商]监听提交事件
            form.on('submit(saveSupplier)', function (data) {
                var index = layer.load(0, { shade: false });
                var model = activeName == "Insert" ? data.field : $.extend(data.field, { ID: SelectData.ID })
                $.post(
                    SelectTreeNode.postUrl,
                    { model: model, detailModel: formSelects.value('select'),name: activeName },
                    function (r) {
                        if (!r.IsError) {
                            layer.closeAll();
                            layer.msg("保存成功", { icon: 1 });
                            getTabelByUrl(SelectTreeNode.tbUrl, SelectTreeNode.tbCols);
                        } else {
                            layer.closeAll();
                            layer.msg('保存异常！', { icon: 5 });
                        }
                    }
                );
                return false;
            });

            //监听查询事件
            form.on('submit(comQuery)', function (data) {
                var model = data.field;
                layuiTableWhere.model = model;
                getTabelByUrl(SelectTreeNode.tbUrl, SelectTreeNode.tbCols);
                return false;
            });
            
            //监听查询事件
            form.on('submit(comQuerySupplier)', function (data) {
                var model = data.field;
                layuiTableWhere = {
                    model: model,
                    detailModel: formSelects.value('selectSpType')
                };
                getTabelByUrl(SelectTreeNode.tbUrl, SelectTreeNode.tbCols);
                return false;
            });
        })
    </script>
</body>

</html>
