
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>DataDictionary</title>
    <link href="~/Scripts/layui-v2.2.6/layui/css/layui.css" rel="stylesheet" />
    <style type="text/css">
        .layui-table-hover {
            background-color: #afcbc8 !important;
        }

        .layui-table-click {
            background-color: #009688 !important;
            color: white;
        }
    </style>
</head>
<body>

    <fieldset class="layui-elem-field layui-field-title" style="margin-top: 20px;">
        <legend>数据字典</legend>
    </fieldset>
    <div>
        <div class="layui-row">
            <div class="layui-col-lg2">
                <div id="dataList" style="display: inline-block; width: 85%; height: 666px; padding: 10px; border: 1px solid #ddd; overflow: auto;">
                    <ul id="treeDataDictionary"></ul>
                </div>
            </div>
            <div class="layui-col-lg10">
                <div id="dataContent">
                    <div class="layui-btn-group tbTools">
                        <button class="layui-btn" data-type="add">添加</button>
                        <button class="layui-btn" data-type="edit">修改</button>
                        <button class="layui-btn" data-type="delete">删除</button>
                    </div>
                    <table class="layui-hide" id="tbDataDictionary" lay-filter="tbDataDictionary"></table>
                </div>
            </div>
        </div>
    </div>



    <script src="~/Scripts/layui-v2.2.6/layui/layui.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Js/MKCom.js"></script>
    <script type="text/javascript">


        layui.use(['table', 'form', 'tree', 'upload'], function () {
            var
                table,//数据表对象
                active,//表按钮事件管理对象
                SelectData, //表格选中的行对象
                SelectTreeNode, //选中的树节点对象
                form,//form表单
                upload //上传

            table = layui.table;
            form = layui.form;
            upload = layui.upload;

            layui.tree({
                elem: '#treeDataDictionary',  //指定元素
                click: function (item) { //点击节点回调
                    getTabelByUrl(item.url);
                    SelectTreeNode = item;
                },
                width: 500,
                nodes: [
                    //节点数据
                    {
                        name: '物料信息',
                        url: '/DataDictionary/GetQueryInfoWuLiao',
                        formUrl: '/FormDataDictionary/FormInfoWuLiao'
                    },
                    {
                        name: '供应商信息',
                        url: '/DataDictionary/GetQueryInfoWuLiao',
                        formUrl: '/FormDataDictionary/FormInfoWuLiao'
                    },
                    {
                        name: '供应商物料信息',
                        url: '/DataDictionary/GetQueryInfoWuLiao',
                        formUrl: '/FormDataDictionary/FormInfoWuLiao'
                    }
                ]
            });

            function getTabelByUrl(url) {
                //执行一个 table 实例
                table.render({
                    elem: '#tbDataDictionary'
                    , height: 332
                    , url: url//数据接口
                    , method: 'post'
                    , page: true //开启分页
                    , cols: [[ //表头
                        { field: 'WuLiaoTypeID', title: '物料类型名称', width: 150, sort: true, event: 'select' }
                        , { field: 'ShangPinName', title: '商品名称', width: 80, sort: true, event: 'select' }
                        , { field: 'GuiGe', title: '规格', width: 120, event: 'select' }
                        , { field: 'HaiGuanNo', title: '海关编号', width: 140, event: 'select' }
                        , { field: 'WuLiaoImagePath', title: '物料图片路径', width: 140, event: 'select' }
                        , { field: 'ShowMark', title: '显示标识', width: 140, event: 'select' }
                        , { field: 'CreateUser', title: '创建人', width: 140, sort: true, event: 'select' }
                        , { field: 'CreateDate', title: '创建时间', width: 140, sort: true, event: 'select' }
                    ]]
                });
            }

            //监听选择事件
            table.on('tool(tbDataDictionary)', function (obj) {
                var data = obj.data;
                if (obj.event === 'select') {
                    //提示：只要sql查出来的数据里面有ID，列无需显示也可以获取
                    SelectData = data;
                    layer.msg('ID<br/><span style="color:red;">' + data.ID + '</span><br/><span style="color:yellow;">' + JSON.stringify(data) + '</span>');
                }
            });

            active = {
                add: function () { //添加
                    if (SelectTreeNode) {
                        $.post(SelectTreeNode.formUrl, {}, function (str) {
                            layer.open({
                                area: ['731px', '386px'],
                                type: 1,
                                content: str, //注意，如果str是object，那么需要字符拼接。
                                cancel: function () {
                                    //右上角关闭回调
                                    layer.msg("关闭啦~");
                                    //return false 开启该代码可禁止点击该按钮关闭
                                }
                            });
                            //如果是动态生成的HTML，自动渲染就会失效，需要执行 form.render() 方法来手动渲染
                            form.render();
                            InitNewCombobox("#WuLiaoTypeID", "WuLiaoType", form, false); //绑定下拉框
                        });
                    }
                    else {
                        layer.msg("请选择左边要添加的基础信息");
                    }
                }
                , edit: function () { //修改
                    if (SelectData) {
                        layer.msg("点击了修改,ID=" + SelectData.ID);
                    } else {
                        layer.msg("请选择要修改的数据");
                    }
                }
                , delete: function () { //删除
                    if (SelectData) {
                        layer.msg("点击了删除,ID=" + SelectData.ID);
                    } else {
                        layer.msg("请选择要删除的数据");
                    }
                }
            };
            //监听按钮点击事件
            $('.tbTools .layui-btn').on('click', function () {
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });

            //监听提交事件
            form.on('submit(save)', function (data) {
                //layer.msg(JSON.stringify(data.field));
                $.post("/DataDictionary/ExceResult",
                    { model: data.field },
                    function (r) {  
                        if (!r.IsError) {
                            layer.close();
                            getTabelByUrl(SelectTreeNode.url);
                            layer.msg("保存成功");
                        }
                    });
                return false;
            });

            upload.render({
                elem: '#id'
                , url: '/api/upload/'
                , auto: false //选择文件后不自动上传
                , bindAction: '#testListAction' //指向一个按钮触发上传
                , choose: function (obj) {
                    //将每次选择的文件追加到文件队列
                    var files = obj.pushFile();

                    //预读本地文件，如果是多文件，则会遍历。(不支持ie8/9)
                    obj.preview(function (index, file, result) {
                        console.log(index); //得到文件索引
                        console.log(file); //得到文件对象
                        console.log(result); //得到文件base64编码，比如图片

                        //这里还可以做一些 append 文件列表 DOM 的操作

                        //obj.upload(index, file); //对上传失败的单个文件重新上传，一般在某个事件中使用
                        //delete files[index]; //删除列表中对应的文件，一般在某个事件中使用
                    });
                }
            });
        })
    </script>
</body>

</html>
